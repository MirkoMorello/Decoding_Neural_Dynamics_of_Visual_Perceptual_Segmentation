# salicon_dinogaze_spade_dynamic_sam64_config.yaml
# For use with train_dinogaze_spade_dynamic_embedding_SAM.py

# --- Experiment Configuration ---
stage: 'salicon_pretrain_dinogaze_spade_sam' # Matches the stage in the new script
log_level: 'INFO'                            # Logging level

# --- DINOv2 Backbone Configuration ---
dinov2_model_name: 'dinov2_vitl14'           # Or 'dinov2_vitl14', 'dinov2_vitg14'
dinov2_patch_size: 14
dinov2_layers_for_main_path: [-3, -2, -1]    # DINO layers for the main saliency path features
                                             # These are indices into the list of all DINO block outputs
dinov2_semantic_feature_layer_idx: -1        # Index (relative to dinov2_layers_for_main_path output list)
                                             # of the DINO feature map to use for SPADE semantic painting.
                                             # -1 means the last one from the list specified above.

# --- SAM Masks & SPADE Dynamic Configuration ---
# segmentation_mask_dir: './masks/SALICON_sam_k64_individual/' # If using individual mask files as primary source
train_mask_subdir_name: 'train_sam64'             # Subdir under segmentation_mask_dir for train SAM masks
val_mask_subdir_name: 'val_sam64'                 # Subdir under segmentation_mask_dir for val SAM masks
segmentation_mask_format: 'png'                   # Format of individual SAM masks ('png' or 'npy')
num_total_sam_segments: 64                        # Total number of SAM segment IDs (e.g., 64 for masks with IDs 0-63)
                                                  # This is used in the _create_painted_semantic_map logic.
                                                  # This is NOT for nn.Embedding anymore.

# --- Training Hyperparameters ---
batch_size: 4 # DinoGaze models can be memory heavy; adjust based on GPU VRAM (e.g., 2, 4, or 8)
gradient_accumulation_steps: 2
lr: 0.0001 # Learning rate might need careful tuning for SPADE heads on DINO features. Start lower.
lr_milestones: [20, 40, 55] # Adjust epoch numbers based on total epochs planned
min_lr: 0.000001 # 1e-7
validation_epochs: 1
resume_checkpoint: null
finalizer_initial_sigma: 8.0 # Initial sigma for the Gaussian blur in the Finalizer module

# --- Dataloading & System ---
num_workers: 8 # Number of DataLoader workers per GPU
train_dir: './experiments/dinogaze_spade_dynamic_sam64_vitl14' # Experiment output directory
dataset_dir: './data/pysaliency_datasets'       # Where SALICON, MIT1003 etc. are stored
lmdb_dir: './data/lmdb_caches_dinogaze_spade'   # Where LMDB caches for images will be stored
use_lmdb_images: true                           # Use LMDB for images

# --- Segmentation Mask Bank Configuration (for SAM masks) ---
# If you have pre-generated SAM masks stored in banks (recommended for speed).
# The script will prioritize banks if paths are provided.
# Otherwise, it falls back to individual files specified by segmentation_mask_dir.

segmentation_mask_bank_dtype: 'uint8' # Dtype used for storing SAM masks in the bank(s)

# Option 1: Fixed-size memmap bank (if all SAM masks are padded/resized to same dimensions)
# train_mask_memmap_file: './masks/banks/sam64/salicon_train_sam_k64_fixed.npy'
# val_mask_memmap_file: './masks/banks/sam64/salicon_val_sam_k64_fixed.npy'

# Option 2: Variable-size mask banks (more flexible for SAM masks of different image sizes)
# Ensure these paths match where your SAM mask generation script saves/saved them.
# train_mask_variable_payload_file: './masks/banks/sam64/salicon_train_sam_k64_var_payload.bin'
# train_mask_variable_header_file: './masks/banks/sam64/salicon_train_sam_k64_var_header.npy'
# val_mask_variable_payload_file: './masks/banks/sam64/salicon_val_sam_k64_var_payload.bin'
# val_mask_variable_header_file: './masks/banks/sam64/salicon_val_sam_k64_var_header.npy'

# Option 3: Using individual mask files (if no banks are prepared)
# Ensure segmentation_mask_dir, train_mask_subdir_name, val_mask_subdir_name are set correctly.
# To force individual files, ensure bank paths above are null or commented out.
segmentation_mask_dir: './masks/SALICON_sam_k64_individual/' # Example path if using individual files


# --- Model Generic Arguments (Not typically used by this specific script, but can be kept for consistency) ---
# add_sa_head: false # The SaliencyNetworkSPADEDynamic in the new script doesn't have an SA head option by default.